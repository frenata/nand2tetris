// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
	// load the right bit if Reset is signaled
	// or if Increment is signaled but not Load
	Not			(in=load,					out=noLoad);
	And			(a=inc,			b=noLoad,	out=incNoLoad);
	Or			(a=reset,		b=incNoLoad,out=lsb);

	// load the left bit if Load or Increment is signaled
	// and Reset is not signaled
	Not			(in=reset,					out=noReset);
	Or			(a=load,		b=inc,		out=loadOrInc);
	And			(a=loadOrInc,	b=noReset,	out=msb);
	
	Inc16		(in=oldState, out=incState);

	// given control bits, select the correct value to load
	Mux4Way16	(out=newState,
				sel[0]=lsb, sel[1]=msb,
				a=oldState, b=false, c=in, d=incState);

	// always load the muxed value
	Register	(in=newState, out=out, out=oldState, load=true);
}
